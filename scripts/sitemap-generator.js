const fs = require('fs');
const path = require('path');

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
async function fetchAllEvents() {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π...');
    const response = await fetch('http://gstouteam.dpdns.org:5555/api/events');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${Array.isArray(data) ? data.length : (data.events ? data.events.length : 0)}`);
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
    if (Array.isArray(data)) {
      return data;
    } else if (data.events && Array.isArray(data.events)) {
      return data.events;
    } else if (data.data && Array.isArray(data.data)) {
      return data.data;
    } else {
      console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π');
      return [];
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π:', error.message);
    return [];
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
async function fetchAllNews() {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...');
    const response = await fetch('http://gstouteam.dpdns.org:5555/api/news');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${Array.isArray(data) ? data.length : (data.news ? data.news.length : 0)}`);
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
    if (Array.isArray(data)) {
      return data;
    } else if (data.news && Array.isArray(data.news)) {
      return data.news;
    } else if (data.data && Array.isArray(data.data)) {
      return data.data;
    } else {
      console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π');
      return [];
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error.message);
    return [];
  }
}

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const staticRoutes = [
  { path: '/', priority: '1.0', changefreq: 'daily' },
  { path: '/contests', priority: '0.8', changefreq: 'weekly' },
  { path: '/about-us', priority: '0.7', changefreq: 'monthly' },
  { path: '/members', priority: '0.6', changefreq: 'weekly' }
];

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
async function generateDynamicRoutes() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    const events = await fetchAllEvents();
    const eventRoutes = events
      .filter(event => event.id) // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è —Å ID
      .map(event => ({
        path: `/events/${event.id}`,
        priority: '0.8',
        changefreq: 'weekly'
      }));

    // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    const news = await fetchAllNews();
    const newsRoutes = news
      .filter(article => article.id) // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ —Å ID
      .map(article => ({
        path: `/news/${article.id}`,
        priority: '0.7',
        changefreq: 'weekly'
      }));

    console.log(`üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è —Å–æ–±—ã—Ç–∏–π: ${eventRoutes.length}`);
    console.log(`üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π: ${newsRoutes.length}`);

    return [...eventRoutes, ...newsRoutes];
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤:', error);
    return [];
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap
async function generateSitemap() {
  const hostname = 'http://gstouteam.dpdns.org';
  
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é sitemap...');
  console.log(`üåê –î–æ–º–µ–Ω: ${hostname}`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã
    const dynamicRoutes = await generateDynamicRoutes();
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã
    const allRoutes = [...staticRoutes, ...dynamicRoutes];
    
    // –°–æ–∑–¥–∞–µ–º XML
    let sitemap = '<?xml version="1.0" encoding="UTF-8"?>\n';
    sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n';
    
    allRoutes.forEach((route, index) => {
      const urlPath = route.path === '/' ? '' : route.path;
      sitemap += `  <url>\n`;
      sitemap += `    <loc>${hostname}${urlPath}</loc>\n`;
      sitemap += `    <changefreq>${route.changefreq}</changefreq>\n`;
      sitemap += `    <priority>${route.priority}</priority>\n`;
      sitemap += `  </url>\n`;
      
      // –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 20 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      if ((index + 1) % 20 === 0 || index === allRoutes.length - 1) {
        console.log(`üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${index + 1}/${allRoutes.length} —Å—Ç—Ä–∞–Ω–∏—Ü`);
      }
    });
    
    sitemap += '</urlset>';
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const publicDir = path.join(__dirname, '../public');
    if (!fs.existsSync(publicDir)) {
      fs.mkdirSync(publicDir, { recursive: true });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    const outputPath = path.join(publicDir, 'sitemap.xml');
    fs.writeFileSync(outputPath, sitemap);
    
    console.log('\n‚úÖ Sitemap —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
    console.log(`üìÅ –ü—É—Ç—å: ${outputPath}`);
    console.log(`üîó URL: ${hostname}/sitemap.xml`);
    console.log(`üìä –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${allRoutes.length}`);
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const staticCount = staticRoutes.length;
    const dynamicCount = dynamicRoutes.length;
    console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   üìÑ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: ${staticCount}`);
    console.log(`   üîÑ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: ${dynamicCount}`);
    console.log(`   üåê –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${allRoutes.length}`);
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (require.main === module) {
  const args = process.argv.slice(2);
  
  if (args.includes('--help') || args.includes('-h')) {
    console.log(`
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node sitemap-generator.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --help, -h    –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
  --verbose     –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
  --domain      –£–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: --domain http://mysite.ru)

–ü—Ä–∏–º–µ—Ä—ã:
  node sitemap-generator.js
  node sitemap-generator.js --domain http://mysite.ru
    `);
    process.exit(0);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ –¥–æ–º–µ–Ω —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
  const domainIndex = args.indexOf('--domain');
  if (domainIndex !== -1 && args[domainIndex + 1]) {
    process.env.SITE_DOMAIN = args[domainIndex + 1];
  }
  
  generateSitemap();
}

module.exports = { generateSitemap };