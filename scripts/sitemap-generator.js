const fs = require('fs');
const path = require('path');

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
async function fetchAllEvents() {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π...');
    const response = await fetch('http://gstouteam.dpdns.org:5555/api/events');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${Array.isArray(data) ? data.length : (data.events ? data.events.length : 0)}`);
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
    if (Array.isArray(data)) {
      return data;
    } else if (data.events && Array.isArray(data.events)) {
      return data.events;
    } else if (data.data && Array.isArray(data.data)) {
      return data.data;
    } else {
      console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π');
      return [];
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π:', error.message);
    return [];
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
async function fetchAllNews() {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...');
    const response = await fetch('http://gstouteam.dpdns.org:5555/api/news');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${Array.isArray(data) ? data.length : (data.news ? data.news.length : 0)}`);
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
    if (Array.isArray(data)) {
      return data;
    } else if (data.news && Array.isArray(data.news)) {
      return data.news;
    } else if (data.data && Array.isArray(data.data)) {
      return data.data;
    } else {
      console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π');
      return [];
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error.message);
    return [];
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
function generateStaticSitemap(hostname) {
  const staticRoutes = [
    { path: '/', priority: '1.0', changefreq: 'daily' },
    { path: '/contests', priority: '0.8', changefreq: 'weekly' },
    { path: '/about-us', priority: '0.7', changefreq: 'monthly' },
    { path: '/members', priority: '0.6', changefreq: 'weekly' }
  ];

  let sitemap = '<?xml version="1.0" encoding="UTF-8"?>\n';
  sitemap += '<?xml-stylesheet type="text/xsl" href="' + hostname + '/sitemaps_xsl.xsl"?>\n';
  sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n';
  
  staticRoutes.forEach(route => {
    const urlPath = route.path === '/' ? '' : route.path;
    sitemap += `  <url>\n`;
    sitemap += `    <loc>${hostname}${urlPath}</loc>\n`;
    sitemap += `    <changefreq>${route.changefreq}</changefreq>\n`;
    sitemap += `    <priority>${route.priority}</priority>\n`;
    sitemap += `  </url>\n`;
  });
  
  sitemap += '</urlset>';
  
  return sitemap;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap –¥–ª—è —Å–æ–±—ã—Ç–∏–π
function generateEventsSitemap(events, hostname) {
  let sitemap = '<?xml version="1.0" encoding="UTF-8"?>\n';
  sitemap += '<?xml-stylesheet type="text/xsl" href="' + hostname + '/sitemaps_xsl.xsl"?>\n';
  sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n';
  
  events.forEach(event => {
    if (event.id) {
      sitemap += `  <url>\n`;
      sitemap += `    <loc>${hostname}/events/${event.id}</loc>\n`;
      sitemap += `    <changefreq>weekly</changefreq>\n`;
      sitemap += `    <priority>0.8</priority>\n`;
      sitemap += `  </url>\n`;
    }
  });
  
  sitemap += '</urlset>';
  
  return sitemap;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π
function generateNewsSitemap(news, hostname) {
  let sitemap = '<?xml version="1.0" encoding="UTF-8"?>\n';
  sitemap += '<?xml-stylesheet type="text/xsl" href="' + hostname + '/sitemaps_xsl.xsl"?>\n';
  sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n';
  
  news.forEach(article => {
    if (article.id) {
      sitemap += `  <url>\n`;
      sitemap += `    <loc>${hostname}/news/${article.id}</loc>\n`;
      sitemap += `    <changefreq>weekly</changefreq>\n`;
      sitemap += `    <priority>0.7</priority>\n`;
      sitemap += `  </url>\n`;
    }
  });
  
  sitemap += '</urlset>';
  
  return sitemap;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap index
function generateSitemapIndex(hostname) {
  const now = new Date().toISOString();
  
  let sitemapIndex = '<?xml version="1.0" encoding="UTF-8"?>\n';
  sitemapIndex += '<?xml-stylesheet type="text/xsl" href="' + hostname + '/sitemaps_xsl.xsl"?>\n';
  sitemapIndex += '<sitemapindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ';
  sitemapIndex += 'xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/siteindex.xsd" ';
  sitemapIndex += 'xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n';
  
  sitemapIndex += `<sitemap>\n`;
  sitemapIndex += `  <loc>${hostname}/page-sitemap.xml</loc>\n`;
  sitemapIndex += `  <lastmod>${now}</lastmod>\n`;
  sitemapIndex += `</sitemap>\n`;
  
  sitemapIndex += `<sitemap>\n`;
  sitemapIndex += `  <loc>${hostname}/events-sitemap.xml</loc>\n`;
  sitemapIndex += `  <lastmod>${now}</lastmod>\n`;
  sitemapIndex += `</sitemap>\n`;
  
  sitemapIndex += `<sitemap>\n`;
  sitemapIndex += `  <loc>${hostname}/news-sitemap.xml</loc>\n`;
  sitemapIndex += `  <lastmod>${now}</lastmod>\n`;
  sitemapIndex += `</sitemap>\n`;
  
  sitemapIndex += '</sitemapindex>';
  
  return sitemapIndex;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
async function generateSitemap() {
  const hostname = 'http://gstouteam.dpdns.org'; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –†–ï–ê–õ–¨–ù–´–ô –î–û–ú–ï–ù
  
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é sitemap –≤ —Ñ–æ—Ä–º–∞—Ç–µ Victorious...');
  console.log(`üåê –î–æ–º–µ–Ω: ${hostname}`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const events = await fetchAllEvents();
    const news = await fetchAllNews();
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const publicDir = path.join(__dirname, '../public');
    if (!fs.existsSync(publicDir)) {
      fs.mkdirSync(publicDir, { recursive: true });
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ sitemap —Ñ–∞–π–ª—ã
    const staticSitemap = generateStaticSitemap(hostname);
    const eventsSitemap = generateEventsSitemap(events, hostname);
    const newsSitemap = generateNewsSitemap(news, hostname);
    const sitemapIndex = generateSitemapIndex(hostname);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
    const files = [
      { name: 'sitemap.xml', content: sitemapIndex },
      { name: 'page-sitemap.xml', content: staticSitemap },
      { name: 'events-sitemap.xml', content: eventsSitemap },
      { name: 'news-sitemap.xml', content: newsSitemap }
    ];
    
    files.forEach(file => {
      const outputPath = path.join(publicDir, file.name);
      fs.writeFileSync(outputPath, file.content);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${file.name}`);
    });
    
    console.log('\n‚úÖ –í—Å–µ sitemap —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log(`üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${publicDir}`);
    console.log(`üîó –û—Å–Ω–æ–≤–Ω–æ–π sitemap: ${hostname}/sitemap.xml`);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   üìÑ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: 4`);
    console.log(`   üîÑ –°–æ–±—ã—Ç–∏–π: ${events.length}`);
    console.log(`   üì∞ –ù–æ–≤–æ—Å—Ç–µ–π: ${news.length}`);
    console.log(`   üìÇ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (require.main === module) {
  const args = process.argv.slice(2);
  
  if (args.includes('--help') || args.includes('-h')) {
    console.log(`
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node sitemap-generator.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --help, -h    –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
  --domain      –£–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: --domain http://mysite.ru)

–ü—Ä–∏–º–µ—Ä—ã:
  node sitemap-generator.js
  node sitemap-generator.js --domain https://–≤–∞—à-—Å–∞–π—Ç.—Ä—Ñ
    `);
    process.exit(0);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ –¥–æ–º–µ–Ω —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
  const domainIndex = args.indexOf('--domain');
  if (domainIndex !== -1 && args[domainIndex + 1]) {
    process.env.SITE_DOMAIN = args[domainIndex + 1];
  }
  
  generateSitemap();
}

module.exports = { generateSitemap };